#include <iostream>
#include <vector>
using namespace std;

vector<int> sortedArray(const vector<int>& a, const vector<int>& b) {
    int n1 = a.size();
    int n2 = b.size();
    int i = 0, j = 0;
    vector<int> unionArr;
    int lastAdded = INT_MIN; // Tracks the last added element to avoid duplicates

    // Merge two arrays while removing duplicates
    while (i < n1 && j < n2) {
        if (a[i] < b[j]) {
            if (a[i] != lastAdded) {
                unionArr.push_back(a[i]);
                lastAdded = a[i];
            }
            i++;
        } else if (b[j] < a[i]) {
            if (b[j] != lastAdded) {
                unionArr.push_back(b[j]);
                lastAdded = b[j];
            }
            j++;
        } else { // a[i] == b[j]
            if (a[i] != lastAdded) {
                unionArr.push_back(a[i]);
                lastAdded = a[i];
            }
            i++;
            j++;
        }
    }

    // Add remaining elements from array `a`
    while (i < n1) {
        if (a[i] != lastAdded) {
            unionArr.push_back(a[i]);
            lastAdded = a[i];
        }
        i++;
    }

    // Add remaining elements from array `b`
    while (j < n2) {
        if (b[j] != lastAdded) {
            unionArr.push_back(b[j]);
            lastAdded = b[j];
        }
        j++;
    }

    return unionArr;
}

int main() {
    vector<int> a = {1, 2, 2, 3, 5};
    vector<int> b = {2, 4, 5, 6};
    vector<int> result = sortedArray(a, b);

    cout << "Union of Arrays: ";
    for (int x : result) {
        cout << x << " ";
    }
    cout << endl;

    return 0;
}
